{"ast":null,"code":"import { API_URL } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.myHeaders = new Headers();\n  }\n  signup(username, email, password) {\n    return this.http.post(API_URL + '/auth/signup', {\n      username,\n      email,\n      password\n    }).subscribe(data => {\n      console.log(data);\n      //this.login(data.username, data.password);\n    });\n  }\n\n  login(username, password) {\n    return this.http.post(API_URL + '/auth/signin', {\n      username,\n      password\n    }).subscribe(data => {\n      console.log(data);\n      this.setToken(data.accessToken);\n    });\n  }\n  logout() {\n    localStorage.removeItem('token');\n  }\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n    //this.router.navigate(['/']);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,QAAQ,6BAA6B;;;;AAMrD,OAAM,MAAOC,WAAW;EAItBC,YACUC,IAAgB,EAChBC,MAAc;IADd,SAAI,GAAJD,IAAI;IACJ,WAAM,GAANC,MAAM;IALhB,cAAS,GAAG,IAAIC,OAAO,EAAE;EAMrB;EAEJC,MAAM,CAACC,QAAgB,EAAEC,KAAa,EAAEC,QAAgB;IACtD,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAACV,OAAO,GAAG,cAAc,EAAE;MAAEO,QAAQ;MAAEC,KAAK;MAAEC;IAAQ,CAAE,CAAC,CAACE,SAAS,CAAEC,IAAS,IAAI;MACrGC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB;IACF,CAAC,CAAC;EACJ;;EAEAG,KAAK,CAACR,QAAgB,EAAEE,QAAgB;IACtC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAACV,OAAO,GAAG,cAAc,EAAE;MAAEO,QAAQ;MAAEE;IAAQ,CAAE,CAAC,CAACE,SAAS,CAAEC,IAAS,IAAI;MAC9FC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB,IAAI,CAACI,QAAQ,CAACJ,IAAI,CAACK,WAAW,CAAC;IACjC,CAAC,CAAC;EACJ;EAEAC,MAAM;IACJC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,QAAQ;IACN,OAAO,CAAC,CAACF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACxC;EAEAN,QAAQ,CAACO,KAAa;IACpBJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;IACpC;EACF;;EAEAE,QAAQ;IACN,OAAON,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAAC;qBAxCUrB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAyB,SAAXzB,WAAW;IAAA0B,YAFV;EAAM","names":["API_URL","AuthService","constructor","http","router","Headers","signup","username","email","password","post","subscribe","data","console","log","login","setToken","accessToken","logout","localStorage","removeItem","loggedIn","getItem","token","setItem","getToken","factory","providedIn"],"sourceRoot":"","sources":["/Users/leoterras/Desktop/ApiMaven/ApiMaven-FrontEnd/src/app/services/auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { API_URL } from 'src/environment/environment';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  myHeaders = new Headers();\n  requestOptions: any;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { }\n\n  signup(username: string, email: string, password: string) {\n    return this.http.post(API_URL + '/auth/signup', { username, email, password }).subscribe((data: any) => {\n      console.log(data);\n\n      //this.login(data.username, data.password);\n    });\n  }\n\n  login(username: string, password: string) {\n    return this.http.post(API_URL + '/auth/signin', { username, password }).subscribe((data: any) => {\n      console.log(data);\n\n      this.setToken(data.accessToken);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n    //this.router.navigate(['/']);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}