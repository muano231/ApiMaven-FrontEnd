{"ast":null,"code":"import { BehaviorSubject, catchError, map, of } from 'rxjs';\nimport { API_URL } from 'src/environment/environment';\nimport { Product } from '../models/product.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class ProductService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.productsSubject = new BehaviorSubject([]);\n    this.products$ = this.productsSubject.asObservable();\n    this.productSubject = new BehaviorSubject([]);\n    this.product$ = this.productSubject.asObservable();\n    this.products = [];\n    this.user_token = this.authService.getToken();\n  }\n  /**\n   * Read - Get all products\n   * @returns Observable<any>\n   */\n  getProducts1() {\n    return this.http.get(`${API_URL}/products`).subscribe(data => {\n      this.setProducts(data);\n    }, error => {\n      console.error('Erreur lors de la sélection des produits :', error);\n      return of(null); // Renvoie null en cas d'erreur\n    });\n  }\n\n  setProducts1(data) {\n    this.productsSubject.next(data);\n  }\n  /**\n   * Read - Get product by id\n   * @param id number\n   * @returns Observable<any>\n   */\n  getProduct(id) {\n    return this.http.get(`${API_URL}/products/${id}`).pipe(map(data => {\n      this.setProduct(data);\n    }), catchError(error => {\n      console.error('Erreur lors de la sélection du produit :', error);\n      return of(null); // Renvoie null en cas d'erreur\n    }));\n  }\n\n  setProduct(value) {\n    this.productSubject.next(value);\n  }\n  setProducts(data) {\n    this.products = data.map(item => new Product(item.id, item.name, item.description, item.price, item.quantity));\n  }\n  getProducts() {\n    return this.http.get(`${API_URL}/products`).pipe(map(data => {\n      this.setProducts(data);\n      return this.products; // Retourne les produits transformés\n    }), catchError(error => {\n      console.error('Erreur lors de la sélection des produits :', error);\n      return of([]); // Renvoie un tableau vide en cas d'erreur\n    }));\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,EAAuBC,UAAU,EAAEC,GAAG,EAAEC,EAAE,QAAQ,MAAM;AAChF,SAASC,OAAO,QAAQ,6BAA6B;AAErD,SAASC,OAAO,QAAQ,yBAAyB;;;;AAKjD,OAAM,MAAOC,cAAc;EAQzBC,YACUC,IAAgB,EAChBC,WAAwB;IADxB,SAAI,GAAJD,IAAI;IACJ,gBAAW,GAAXC,WAAW;IATb,oBAAe,GAAyB,IAAIT,eAAe,CAAM,EAAE,CAAC;IACrE,cAAS,GAAoB,IAAI,CAACU,eAAe,CAACC,YAAY,EAAE;IAC/D,mBAAc,GAAyB,IAAIX,eAAe,CAAM,EAAE,CAAC;IACpE,aAAQ,GAAoB,IAAI,CAACY,cAAc,CAACD,YAAY,EAAE;IAE7D,aAAQ,GAAc,EAAE;IAM9B,IAAI,CAACE,UAAU,GAAG,IAAI,CAACJ,WAAW,CAACK,QAAQ,EAAY;EACzD;EAEA;;;;EAIAC,YAAY;IACV,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,GAAGZ,OAAO,WAAW,CAAC,CAACa,SAAS,CAClDC,IAAS,IAAI;MACZ,IAAI,CAACC,WAAW,CAACD,IAAI,CAAC;IACxB,CAAC,EACAE,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAClE,OAAOjB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CACF;EACH;;EAEAmB,YAAY,CAACJ,IAAS;IACpB,IAAI,CAACR,eAAe,CAACa,IAAI,CAACL,IAAI,CAAC;EACjC;EAEA;;;;;EAKAM,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACjB,IAAI,CAACQ,GAAG,CAAC,GAAGZ,OAAO,aAAaqB,EAAE,EAAE,CAAC,CAACC,IAAI,CACpDxB,GAAG,CAAEgB,IAAS,IAAI;MAChB,IAAI,CAACS,UAAU,CAACT,IAAI,CAAC;IACvB,CAAC,CAAC,EACFjB,UAAU,CAAEmB,KAAU,IAAI;MACxBC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAChE,OAAOjB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACH;EACH;;EAEAwB,UAAU,CAACC,KAAU;IACnB,IAAI,CAAChB,cAAc,CAACW,IAAI,CAACK,KAAK,CAAC;EACjC;EAEAT,WAAW,CAACD,IAAW;IACrB,IAAI,CAACW,QAAQ,GAAGX,IAAI,CAAChB,GAAG,CAAC4B,IAAI,IAAI,IAAIzB,OAAO,CAC1CyB,IAAI,CAACL,EAAE,EACPK,IAAI,CAACC,IAAI,EACTD,IAAI,CAACE,WAAW,EAChBF,IAAI,CAACG,KAAK,EACVH,IAAI,CAACI,QAAQ,CACd,CAAC;EACJ;EAEAC,WAAW;IACT,OAAO,IAAI,CAAC3B,IAAI,CAACQ,GAAG,CAAC,GAAGZ,OAAO,WAAW,CAAC,CAACsB,IAAI,CAC9CxB,GAAG,CAAEgB,IAAS,IAAI;MAChB,IAAI,CAACC,WAAW,CAACD,IAAI,CAAC;MACtB,OAAO,IAAI,CAACW,QAAQ,CAAC,CAAC;IACxB,CAAC,CAAC,EACF5B,UAAU,CAAEmB,KAAU,IAAI;MACxBC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAClE,OAAOjB,EAAE,CAAC,EAAe,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CACH;EACH;EAAC;qBA7EUG,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAA8B,SAAd9B,cAAc;IAAA+B,YAFb;EAAM","names":["BehaviorSubject","catchError","map","of","API_URL","Product","ProductService","constructor","http","authService","productsSubject","asObservable","productSubject","user_token","getToken","getProducts1","get","subscribe","data","setProducts","error","console","setProducts1","next","getProduct","id","pipe","setProduct","value","products","item","name","description","price","quantity","getProducts","factory","providedIn"],"sourceRoot":"","sources":["/Users/leoterras/Desktop/ApiMaven/ApiMaven-FrontEnd/src/app/services/product.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, catchError, map, of } from 'rxjs';\nimport { API_URL } from 'src/environment/environment';\nimport { AuthService } from './auth.service';\nimport { Product } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private productsSubject: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n  public products$: Observable<any> = this.productsSubject.asObservable();\n  private productSubject: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n  public product$: Observable<any> = this.productSubject.asObservable();\n  user_token: string;\n  private products: Product[] = [];\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) {\n    this.user_token = this.authService.getToken() as string;\n  }\n\n  /**\n   * Read - Get all products\n   * @returns Observable<any>\n   */\n  getProducts1(): any {\n    return this.http.get(`${API_URL}/products`).subscribe(\n      (data: any) => {\n        this.setProducts(data);\n      },\n      (error: any) => {\n        console.error('Erreur lors de la sélection des produits :', error);\n        return of(null); // Renvoie null en cas d'erreur\n      }\n    )\n  }\n\n  setProducts1(data: any): void {\n    this.productsSubject.next(data);\n  }\n\n  /**\n   * Read - Get product by id\n   * @param id number\n   * @returns Observable<any>\n   */\n  getProduct(id: number): Observable<any> {\n    return this.http.get(`${API_URL}/products/${id}`).pipe(\n      map((data: any) => {\n        this.setProduct(data);\n      }),\n      catchError((error: any) => {\n        console.error('Erreur lors de la sélection du produit :', error);\n        return of(null); // Renvoie null en cas d'erreur\n      })\n    )\n  }\n\n  setProduct(value: any): void {\n    this.productSubject.next(value);\n  }\n\n  setProducts(data: any[]): void {\n    this.products = data.map(item => new Product(\n      item.id,\n      item.name,\n      item.description,\n      item.price,\n      item.quantity\n    ));\n  }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get(`${API_URL}/products`).pipe(\n      map((data: any) => {\n        this.setProducts(data);\n        return this.products; // Retourne les produits transformés\n      }),\n      catchError((error: any) => {\n        console.error('Erreur lors de la sélection des produits :', error);\n        return of([] as Product[]); // Renvoie un tableau vide en cas d'erreur\n      })\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}