{"ast":null,"code":"import _asyncToGenerator from \"/Users/leoterras/Desktop/ApiMaven/ApiMaven-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class SigninComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.signinForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.signinForm.invalid) return alert(\"tous les champs doivent être saisis\");\n      if (_this.signinForm.value.password == _this.signinForm.value.confirmPassword) {\n        //await\n        //return;\n      } else {\n        return alert(\"Les mots de passe ne sont pas identiques\");\n      }\n      console.log(_this.signinForm.value);\n    })();\n  }\n  static #_ = this.ɵfac = function SigninComponent_Factory(t) {\n    return new (t || SigninComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SigninComponent,\n    selectors: [[\"app-signin\"]],\n    decls: 27,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"formControlName\", \"username\", \"required\", \"\"], [\"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function SigninComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"signin works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"div\")(4, \"h1\");\n        i0.ɵɵtext(5, \"Cr\\u00E9er un compte\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\")(9, \"label\", 1);\n        i0.ɵɵtext(10, \"Nom d'utilisateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\")(13, \"label\", 1);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\")(17, \"label\", 4);\n        i0.ɵɵtext(18, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\")(21, \"label\", 6);\n        i0.ɵɵtext(22, \"Confimer mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\")(25, \"button\", 8);\n        i0.ɵɵtext(26, \"Cr\\u00E9er un compte\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.signinForm);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"disabled\", ctx.signinForm.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;AAOxD,OAAM,MAAOC,eAAe;EAG1BC,YACUC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAEnB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACvCC,QAAQ,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MACnCC,KAAK,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MAChCE,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACO,QAAQ,CAAC;MACnCG,eAAe,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACO,QAAQ;KAC1C,CAAC;EACJ;EAEMI,QAAQ;IAAA;IAAA;MACZ,IAAI,KAAI,CAACP,UAAU,CAACQ,OAAO,EAAE,OAAOC,KAAK,CAAC,qCAAqC,CAAC;MAEhF,IAAI,KAAI,CAACT,UAAU,CAACU,KAAK,CAACL,QAAQ,IAAI,KAAI,CAACL,UAAU,CAACU,KAAK,CAACJ,eAAe,EAAE;QAC3E;QACA;MAAA,CACD,MAAM;QACL,OAAOG,KAAK,CAAC,0CAA0C,CAAC;;MAE1DE,OAAO,CAACC,GAAG,CAAC,KAAI,CAACZ,UAAU,CAACU,KAAK,CAAC;IAAC;EACrC;EAAC;qBAxBUb,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCR5BC,yBAAG;QAAAA,6BAAa;QAAAA,iBAAI;QACpBA,2BAAK;QAEOA,oCAAe;QAAAA,iBAAK;QAE5BA,2BAAK;QAE8BA;UAAA,OAAYC,cAAU;QAAA,EAAC;QAClDD,2BAAK;QACqBA,kCAAiB;QAAAA,iBAAQ;QAC/CA,4BAAuD;QAC3DA,iBAAM;QACNA,4BAAK;QACqBA,sBAAK;QAAAA,iBAAQ;QACnCA,4BAAqD;QACzDA,iBAAM;QACNA,4BAAK;QACqBA,6BAAY;QAAAA,iBAAQ;QAC1CA,4BAA2D;QAC/DA,iBAAM;QACNA,4BAAK;QAC4BA,sCAAqB;QAAAA,iBAAQ;QAC1DA,4BAAkE;QACtEA,iBAAM;QACNA,4BAAK;QACqDA,qCAAe;QAAAA,iBAAS;;;QAlBhFA,eAAwB;QAAxBA,0CAAwB;QAkBAA,gBAA+B;QAA/BA,iDAA+B","names":["Validators","SigninComponent","constructor","formBuilder","signinForm","group","username","required","email","password","confirmPassword","onSubmit","invalid","alert","value","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/leoterras/Desktop/ApiMaven/ApiMaven-FrontEnd/src/app/components/signin/signin.component.ts","/Users/leoterras/Desktop/ApiMaven/ApiMaven-FrontEnd/src/app/components/signin/signin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent {\n  signinForm: any;\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    this.signinForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    })\n  }\n\n  async onSubmit() {\n    if (this.signinForm.invalid) return alert(\"tous les champs doivent être saisis\");\n\n    if (this.signinForm.value.password == this.signinForm.value.confirmPassword) {\n      //await\n      //return;\n    } else {\n      return alert(\"Les mots de passe ne sont pas identiques\");\n    }\n    console.log(this.signinForm.value);\n  }\n\n}\n","<p>signin works!</p>\n<div>\n    <div>\n        <h1>Créer un compte</h1>\n    </div>\n    <div>\n        <!-- <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\"> -->\n        <form [formGroup]=\"signinForm\" (ngSubmit)=\"onSubmit()\">\n            <div>\n                <label for=\"username\">Nom d'utilisateur</label>\n                <input type=\"text\" formControlName=\"username\" required>\n            </div>\n            <div>\n                <label for=\"username\">Email</label>\n                <input type=\"email\" formControlName=\"email\" required>\n            </div>\n            <div>\n                <label for=\"password\">Mot de passe</label>\n                <input type=\"password\" formControlName=\"password\" required>\n            </div>\n            <div>\n                <label for=\"confirmPassword\">Confimer mot de passe</label>\n                <input type=\"password\" formControlName=\"confirmPassword\" required>\n            </div>\n            <div>\n                <button type=\"submit\" [disabled]=\"signinForm.invalid\">Créer un compte</button>\n            </div>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}